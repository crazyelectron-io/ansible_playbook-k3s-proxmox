---
- name: Make sure the Registry namespace is present
  kubernetes.core.k8s:
    name: "{{ registry_namespace }}"
    api_version: v1
    kind: Namespace
    state: present
  delegate_to: 127.0.0.1
  run_once: true

- name: Create Registry password secret
  kubernetes.core.k8s:
    state: present
    definition:
      kind: Secret
      apiVersion: v1
      metadata:
        name: registry-htpasswd
        namespace: "{{ registry_namespace }}"
      stringData:
        htpasswd: "{{ registry_password }}"

- name: Create container Registry PVC
  kubernetes.core.k8s:
    state: present
    definition:
      kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: registry-pvc
        namespace: "{{ registry_namespace }}"
      spec:
        storageClassName: longhorn
        persistentVolumeReclaimPolicy: Retain
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 50Gi

- name: Create container Registry Service
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: registry-service
        namespace: "{{ registry_namespace }}"
        annotations:
          metallb.universe.tf/allow-shared-ip: kube-registry
      spec:
        selector:
          app: registry
        type: LoadBalancer
        loadBalancerIP: 10.100.3.109
        ports:
          - protocol: TCP
            port: 5000

- name: Create Docker Registry secret
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: registry-cred
        namespace: "{{ registry_namespace }}"
      data:
        .dockerconfigjson: ewoJImF1dGhzIjogewoJCSJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOiB7fSwKCQkicmVnaXN0cnkubW9lcm1hbi5vbmxpbmU6NTAwMCI6IHsKCQkJIlVzZXJuYW1lIjoicmVnaXN0cnkiLCJTZWNyZXQiOiJGIWVzRzMzU1QiCgkJfQoJfQp9Cg==
      type: kubernetes.io/dockerconfigjson

- name: Create Private Registry Deployment
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: registry
        namespace: "{{ registry_namespace }}"
        labels:
          app: registry
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: registry
        template:
          metadata:
            labels:
              app: registry
          spec:
            imagePullSecrets:
              - name: registry-cred
            containers:
              - name: registry
                image: registry
                imagePullPolicy: IfNotPresent
                ports:
                  - containerPort: 5000
                volumeMounts:
                  - name: storage
                    mountPath: "{{ registry_path }}"
                    readOnly: false
                  - name: htpasswd
                    mountPath: /auth
                    readOnly: true
                env:
                  - name: REGISTRY_AUTH
                    value: htpasswd
                  - name: REGISTRY_AUTH_HTPASSWD_REALM
                    value: Docker Registry
                  - name: REGISTRY_AUTH_HTPASSWD_PATH
                    value: /auth/htpasswd
                  - name: REGISTRY_STORAGE_DELETE_ENABLED
                    value: "true"
                  - name: REGISTRY_HTTP_ADDR
                    value: :5000
                  - name: REGISTRY_HTTP_DEBUG_ADDR
                    value: "{{ debug_address }}"
                  - name: REGISTRY_HTTP_DEBUG_PROMETHEUS_ENABLED
                    value: "{{ prometheus_enabled }}"
                  - name: REGISTRY_HTTP_DEBUG_PROMETHEUS_PATH
                    value: "{{ prometheus_path }}"
                  - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
                    value: "{{ registry_path }}"
                resources:
                  limits:
                    cpu: 500m
                    memory: 512Mi
            volumes:
              - name: storage
                persistentVolumeClaim:
                  claimName: registry-pvc
              - name: htpasswd
                secret:
                  secretName: registry-htpasswd
