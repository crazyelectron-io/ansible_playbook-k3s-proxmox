# file: roles/common/pve-deploy/tasks/main.yml
# synopsis: provision the K3s master and worker nodes on Proxmox
---
- name: Create PVE VM k3s nodes
  community.general.proxmox_kvm:
    proxmox_default_behavior: "compatibility"
    api_user: "{{ pve_api_user }}"
    api_password: "{{ pve_api_password }}"
    api_host: "{{ pve_api_host }}"
    name: "{{ item }}"
    node: "{{ hostvars[item].node }}"
    clone: "{{ ci_template_name }}"
    vmid: "{{ hostvars[item].cloneid | int }}"
    newid: "{{ hostvars[item].vmid | int }}"
    full: true
    format: 'unspecified'
    timeout: 180
    storage: local-lvm
  with_items: "{{ groups['kube'] }}"
  when: inventory_hostname == "prox01"
  run_once: true
  delegate_to: localhost
  tags: provision
  register: nodes_created

- name: Get configuration info from k3s nodes
  community.general.proxmox_vm_info:
    api_user: "{{ pve_api_user }}"
    api_password: "{{ pve_api_password }}"
    api_host: "{{ pve_api_host }}"
    node: "{{ hostvars[item].node }}"
    type: qemu
    vmid: "{{ hostvars[item].vmid | int }}"
  register: vm_info
  with_items: "{{ groups['kube'] }}"
  when: inventory_hostname == "prox01"
  delegate_to: localhost

- name: Populate vminfo variable for k3s nodes
  set_fact:
    vminfo: "{{ vminfo | default({}) | combine ({ item|json_query('proxmox_vms[].name')|first : item.proxmox_vms[0] }, recursive=true) }}"
  with_items: "{{ vm_info.results }}"
  when: inventory_hostname == "prox01"

- name: Update PVE VM k3s nodes
  community.general.proxmox_kvm:
    update: yes
    api_user: "{{ pve_api_user }}"
    api_password: "{{ pve_api_password }}"
    api_host: "{{ pve_api_host }}"
    node: "{{ hostvars[item].node }}"
    vmid: "{{ hostvars[item].vmid | int }}"
    memory: "{{ hostvars[item].memory | default(defaults.memory) | int }}"
    autostart: 'yes'  # doesn't work, must be set manually
    agent: 'yes'
    cores: "{{ hostvars[item].cores | default(defaults.cores) | int }}"
    ostype: l26
  with_items: "{{ groups['kube'] }}"
  delegate_to: localhost
  when: (inventory_hostname == "prox01") and (vminfo[item].maxmem != (hostvars[item].memory * 1048576))
  tags: provision

- name: Update VM net0 MAC address for k3s nodes
  community.general.proxmox_nic:
    api_user: "{{ pve_api_user }}"
    api_password: "{{ pve_api_password }}"
    api_host: "{{ pve_api_host }}"
    vmid: "{{ hostvars[item].vmid | int }}"
    interface: "net0"
    bridge: "{{ vm_bridge }}"
    mac: "{{ hostvars[item].mac }}"
  with_items: "{{ groups['kube'] }}"
  when: inventory_hostname == "prox01"
  delegate_to: localhost
  tags: provision

- import_tasks: expand-disk.yaml

- name: Attach SSDs directly to worker VMs
  ansible.builtin.shell:
    cmd: |
      qm set {{ hostvars[item].vmid }} -scsi1 /dev/disk/by-id/{{ hostvars[item].disk1 }},iothread=1 --scsihw virtio-scsi-single
      qm set {{ hostvars[item].vmid }} -scsi2 /dev/disk/by-id/{{ hostvars[item].disk2 }},iothread=1 --scsihw virtio-scsi-single
      qm set {{ hostvars[item].vmid }} -scsi3 /dev/disk/by-id/{{ hostvars[item].disk3 }},iothread=1 --scsihw virtio-scsi-single
      qm set {{ hostvars[item].vmid }} -scsi4 /dev/disk/by-id/{{ hostvars[item].disk4 }},iothread=1 --scsihw virtio-scsi-single
  when: (hostvars[item].node == inventory_hostname) and (hostvars['prox01']['vminfo'][item].status == 'stopped')
  with_items: "{{ groups['worker'] }}"
  register: disks_attached

- name: Start the first master VM
  community.general.proxmox_kvm:
    proxmox_default_behavior: "compatibility"
    api_user: "{{ pve_api_user }}"
    api_password: "{{ pve_api_password }}"
    api_host: "{{ pve_api_host }}"
    node: "{{ hostvars[item].node }}"
    vmid: "{{ hostvars[item].vmid | int }}"
    state: started
    timeout: 60
  with_items: "{{ groups[group_name_master | default('master')][0] }}"
  when: inventory_hostname == "prox01"
  delegate_to: localhost
  register: start_first_master
  tags: provision

- name: Wait 30s to have the first master started
  ansible.builtin.wait_for:
    timeout: 30
  when: start_first_master.changed
  run_once: true

- name: Start all master VMs
  community.general.proxmox_kvm:
    proxmox_default_behavior: "compatibility"
    api_user: "{{ pve_api_user }}"
    api_password: "{{ pve_api_password }}"
    api_host: "{{ pve_api_host }}"
    node: "{{ hostvars[item].node }}"
    vmid: "{{ hostvars[item].vmid | int }}"
    state: started
    timeout: 60
  with_items: "{{ groups[group_name_master | default('master')] }}"
  when: inventory_hostname == "prox01"
  delegate_to: localhost
  register: start_masters
  tags: provision

- name: Wait 45s for all master nodes to start completely
  wait_for:
    timeout: 45
  when: start_masters.changed
  run_once: true

- name: Start all worker VMs
  community.general.proxmox_kvm:
    proxmox_default_behavior: "compatibility"
    api_user: "{{ pve_api_user }}"
    api_password: "{{ pve_api_password }}"
    api_host: "{{ pve_api_host }}"
    node: "{{ hostvars[item].node }}"
    vmid: "{{ hostvars[item].vmid | int }}"
    state: started
  with_items: "{{ groups[group_name_worker | default('worker')] }}"
  when: (hostvars[item].node == inventory_hostname)
  delegate_to: localhost
  register: start_workers
  tags: provision

- name: Wait 45s for all worker nodes to start completely
  wait_for:
    timeout: 45
  when: start_workers.changed
  run_once: true
