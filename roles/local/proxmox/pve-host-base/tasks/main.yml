# file: roles/local/proxmox/pve-host-base/tasks/main.yml
# synopsis: configure pve hosts
# notes: Make sure to copy the SSH key first with the following command:
#        'scp ~/.ssh/beheerder_key.pub root@pveXX:./.ssh/authorized_keys'
---
- name: Disable Proxmox enterprise subscription repository
  ansible.builtin.file:
    path: "{{ pve_subscription_repo }}"
    state: absent

- name: Disable Proxmox Ceph enterprise subscription repository
  ansible.builtin.file:
    path: "{{ ceph_subscription_repo }}"
    state: absent

- name: Add PVE non-production repository
  apt_repository:
    repo: "{{ pve_repository }}"
    state: present

- name: Upgrade all packages to the latest version
  ansible.builtin.apt:
    name: '*'
    state: latest
    update_cache: yes

- name: Deploy PVE host packages
  ansible.builtin.package:
    name: "{{ pve_packages }}"
    state: present

# - name: pip self-update (pip install --upgrade pip)
#   pip:
#     name: pip
#     state: latest

# Needed for Ansible Proxmox module
# - name: Pip | Install virtual environment
#   ansible.builtin.pip:
#     name:
#       - virtualenv
#       - proxmoxer
- name: Python modules needed for Ansible Proxmox module
  ansible.builtin.apt:
    name: python3-proxmoxer
    state: latest
    update_cache: yes

- name: Configure locale
  community.general.locale_gen:
    name: en_US.UTF-8
    state: present

- name: Add locale definitions to .bashrc
  ansible.builtin.blockinfile:
    path: "~/.bashrc"
    block: |
      # set the locale
      LANG=en_US.UTF-8
      LC_CTYPE=en_US.UTF-8
      LC_ALL=en_US.UTF-8

- name: Check if VM bridge configuration already set
  ansible.builtin.lineinfile:
    path: '/etc/network//interfaces'
    line: "iface vmbr100 inet static"
    state: present
  check_mode: true # Ensure the file is not changed
  register: vmbr_interface
  changed_when: false
  failed_when: (vmbr_interface is changed) or (vmbr_interface is failed)

- name: Create network configuration
  ansible.builtin.template:
    src: interfaces.j2
    dest: '/etc/network//interfaces'
    mode: 'u=rw,go=r'
    force: no
    backup: yes
  with_items: "{{ groups['proxmox'] }}"
  when: vmbr_interface.changed and (inventory_hostname == item)
  vars:
    nic1: "{{ hostvars[item].mgmt_nic }}"
    nic2: "{{ hostvars[item].vm_nic1 }}"
    nic3: "{{ hostvars[item].vm_nic2 }}"
    gw: "{{ hostvars[item].mgmt_gw }}"
    ip1: "{{ hostvars[item].mgmt_ip }}"
    ip2: "{{ hostvars[item].bridge_ip }}"
